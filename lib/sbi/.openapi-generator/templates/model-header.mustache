{{#models}}{{#model}}/*
 * {{classname}}.h
 *
 * {{description}}
 */

#ifndef _{{classname}}_H_
#define _{{classname}}_H_

#include <string.h>
#include "../external/cJSON.h"
#include "../include/list.h"
#include "../include/keyValuePair.h"
#include "../include/binary.h"
{{#imports}}
#include "{{{.}}}.h"
{{/imports}}

{{#isEnum}}
    {{#allowableValues}}
        typedef enum { {{classVarName}}_{{enumName}}NULL = 0{{#enumVars}}, {{classVarName}}_{{enumName}}{{{value}}}{{/enumVars}} } {{classVarName}}_{{enumName}}e;
    {{/allowableValues}}

    char* {{classname}}_ToString({{classVarName}}_{{enumName}}e {{classname}});

    {{classVarName}}_{{enumName}}e {{classname}}_FromString(char* {{classname}});
{{/isEnum}}
{{^isEnum}}
    typedef struct {{classname}}_t {{classname}}_t;
{{#vars}}
    {{^isContainer}}
        {{#isPrimitiveType}}
            {{#isEnum}}
                {{#allowableValues}}
                typedef enum { {{classVarName}}_{{enumName}}_NULL = 0{{#enumVars}}, {{classVarName}}_{{enumName}}_{{{value}}}{{/enumVars}} } {{classVarName}}_{{name}}_e;
                {{/allowableValues}}

                char* {{classVarName}}_{{name}}_ToString({{classVarName}}_{{name}}_e {{name}});

                {{classVarName}}_{{name}}_e {{classVarName}}_{{name}}_FromString(char* {{name}});
            {{/isEnum}}
        {{/isPrimitiveType}}
    {{/isContainer}}
{{/vars}}
    typedef struct {{classname}}_t {
{{#vars}}
    {{^isContainer}}
        {{^isPrimitiveType}}
            {{#isEnum}}
                {{datatype}}_e {{name}};
            {{/isEnum}}
            {{^isEnum}}
                {{#isModel}}
                    struct {{datatype}}_t *{{name}};
                {{/isModel}}
                {{#isUuid}}
                    {{datatype}} *{{name}};
                {{/isUuid}}
                {{#isEmail}}
                    {{datatype}} *{{name}};
                {{/isEmail}}
                {{#isFreeFormObject}}
                    {{datatype}}_t *{{name}};
                {{/isFreeFormObject}}
            {{/isEnum}}
        {{/isPrimitiveType}}
        {{#isPrimitiveType}}
            {{#isEnum}}
                {{classVarName}}_{{name}}_e {{name}};
            {{/isEnum}}
            {{^isEnum}}
                {{#isNumeric}}
                    {{datatype}} {{name}};
                {{/isNumeric}}
                {{#isBoolean}}
                    {{datatype}} {{name}};
                {{/isBoolean}}
                {{#isString}}
                    {{datatype}} *{{name}};
                {{/isString}}
            {{/isEnum}}
            {{#isByteArray}}
                {{datatype}} {{name}};
            {{/isByteArray}}
            {{#isBinary}}
                {{datatype}} {{name}};
            {{/isBinary}}
            {{#isDate}}
                {{datatype}} *{{name}};
            {{/isDate}}
            {{#isDateTime}}
                {{datatype}} *{{name}};
            {{/isDateTime}}
        {{/isPrimitiveType}}
    {{/isContainer}}
    {{#isContainer}}
        {{#isListContainer}}
            {{datatype}}_t *{{name}};
        {{/isListContainer}}
        {{#isMapContainer}}
            {{datatype}} {{name}};
        {{/isMapContainer}}
    {{/isContainer}}
{{/vars}}
} {{classname}}_t;

{{classname}}_t *{{classname}}_create(
{{#vars}}
    {{^isContainer}}
        {{^isPrimitiveType}}
            {{#isEnum}}
                {{datatype}}_e {{name}}{{#hasMore}},{{/hasMore}}
            {{/isEnum}}
            {{^isEnum}}
                {{#isModel}}
                    {{datatype}}_t *{{name}}{{#hasMore}},{{/hasMore}}
                {{/isModel}}
                {{#isUuid}}
                    {{datatype}} *{{name}}{{#hasMore}},{{/hasMore}}
                {{/isUuid}}
                {{#isEmail}}
                    {{datatype}} *{{name}}{{#hasMore}},{{/hasMore}}
                {{/isEmail}}
                {{#isFreeFormObject}}
                    {{datatype}}_t *{{name}}{{#hasMore}},{{/hasMore}}
                {{/isFreeFormObject}}
            {{/isEnum}}
        {{/isPrimitiveType}}
        {{#isPrimitiveType}}
            {{#isEnum}}
                {{classVarName}}_{{name}}_e {{name}}{{#hasMore}},{{/hasMore}}
            {{/isEnum}}
            {{^isEnum}}
                {{#isNumeric}}
                    {{datatype}} {{name}}{{#hasMore}},{{/hasMore}}
                {{/isNumeric}}
                {{#isBoolean}}
                    {{datatype}} {{name}}{{#hasMore}},{{/hasMore}}
                {{/isBoolean}}
                {{#isString}}
                    {{datatype}} *{{name}}{{#hasMore}},{{/hasMore}}
                {{/isString}}
            {{/isEnum}}
            {{#isByteArray}}
                {{datatype}} {{name}}{{#hasMore}},{{/hasMore}}
            {{/isByteArray}}
            {{#isBinary}}
                {{datatype}} {{name}}{{#hasMore}},{{/hasMore}}
            {{/isBinary}}
            {{#isDate}}
                {{datatype}} *{{name}}{{#hasMore}},{{/hasMore}}
            {{/isDate}}
            {{#isDateTime}}
                {{datatype}} *{{name}}{{#hasMore}},{{/hasMore}}
            {{/isDateTime}}
        {{/isPrimitiveType}}
    {{/isContainer}}
    {{#isContainer}}
        {{#isListContainer}}
            {{datatype}}_t *{{name}}{{#hasMore}},{{/hasMore}}
        {{/isListContainer}}
        {{#isMapContainer}}
            {{datatype}} {{name}}{{#hasMore}},{{/hasMore}}
        {{/isMapContainer}}
    {{/isContainer}}
{{/vars}});
void {{classname}}_free({{classname}}_t *{{classname}});
{{classname}}_t *{{classname}}_parseFromJSON(cJSON *{{classname}}JSON);
cJSON *{{classname}}_convertToJSON({{classname}}_t *{{classname}});
{{/isEnum}}
#endif /* _{{classname}}_H_ */
{{/model}}{{/models}}
